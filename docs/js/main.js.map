{"version":3,"sources":["main.js"],"names":["window","onload","serialize","form","serialized","i","elements","length","field","name","disabled","type","n","options","selected","encodeURIComponent","value","checked","document","forms","namedItem","addEventListener","e","preventDefault","formData","fetch","method","headers","body","JSON","stringify","then","resp","text","data","console","log","results","textContent","catch","error","cLog"],"mappings":";;AAAAA,OAAOC,MAAP,GAAgB,YAAW;;AAEzB;;;;;;;AAOI,MAAMC,YAAY,SAAZA,SAAY,CAAUC,IAAV,EAAgB;;AAEjC;AACA,QAAIC,aAAa,EAAjB;;AAEA;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,KAAKG,QAAL,CAAcC,MAAlC,EAA0CF,GAA1C,EAA+C;;AAE7C,UAAIG,QAAQL,KAAKG,QAAL,CAAcD,CAAd,CAAZ;;AAEA;AACA,UAAI,CAACG,MAAMC,IAAP,IAAeD,MAAME,QAArB,IAAiCF,MAAMG,IAAN,KAAe,MAAhD,IAA0DH,MAAMG,IAAN,KAAe,OAAzE,IAAoFH,MAAMG,IAAN,KAAe,QAAnG,IAA+GH,MAAMG,IAAN,KAAe,QAAlI,EAA4I;;AAE5I;AACA,UAAIH,MAAMG,IAAN,KAAe,iBAAnB,EAAsC;AACpC,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIJ,MAAMK,OAAN,CAAcN,MAAlC,EAA0CK,GAA1C,EAA+C;AAC7C,cAAI,CAACJ,MAAMK,OAAN,CAAcD,CAAd,EAAiBE,QAAtB,EAAgC;AAChCV,qBAAWW,mBAAmBP,MAAMC,IAAzB,CAAX,IAA6CM,mBAAmBP,MAAMK,OAAN,CAAcD,CAAd,EAAiBI,KAApC,CAA7C;AACD;AACF;;AAED;AAPA,WAQK,IAAKR,MAAMG,IAAN,KAAe,UAAf,IAA6BH,MAAMG,IAAN,KAAe,OAA7C,IAAyDH,MAAMS,OAAnE,EAA4E;AAC/Eb,qBAAWW,mBAAmBP,MAAMC,IAAzB,CAAX,IAA6CM,mBAAmBP,MAAMQ,KAAzB,CAA7C;AACD;AACF;AACD,WAAOZ,UAAP;AACD,GA3BA;;AA6BH,MAAID,OAAOe,SAASC,KAAT,CAAeC,SAAf,CAAyB,UAAzB,CAAX;AACAjB,OAAKkB,gBAAL,CAAsB,QAAtB,EAAgC,UAASC,CAAT,EAAY;AAC1CA,MAAEC,cAAF;;AAEA,QAAMC,WAAWtB,UAAUC,IAAV,CAAjB;AACAsB,UAAM,0CAAN,EAAkD;AAChDC,cAAQ,MADwC;AAEhDC,eAAS;AACP,wBAAgB;AADT,OAFuC;AAKhDC,YAAMC,KAAKC,SAAL,CAAeN,QAAf;AAL0C,KAAlD,EAOCO,IAPD,CAOM,UAASC,IAAT,EAAe;AACnB,aAAOA,KAAKC,IAAL,EAAP;AACD,KATD,EAUCF,IAVD,CAUM,UAASG,IAAT,EAAe;AACnBC,cAAQC,GAAR,CAAYF,IAAZ;AACAG,cAAQC,WAAR,GAAsBJ,IAAtB;AACD,KAbD,EAcCK,KAdD,CAcO,UAASC,KAAT,EAAgB;AACrBL,cAAQK,KAAR,CAAcA,KAAd;AACD,KAhBD;AAiBD,GArBD;;AAyBC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,OAAO,SAAPA,IAAO,GAAM;AAACN,YAAQC,GAAR,CAAY,aAAZ;AAA2B,GAA/C;AACAK;AACF,CAzFF","file":"main.js","sourcesContent":["window.onload = function() {\r\n\r\n  /*!\r\n       * Serialize all form data into a query string\r\n       * (c) 2018 Chris Ferdinandi, MIT License, https://gomakethings.com\r\n       * @param  {Node}   form The form to serialize\r\n       * @return {String}      The serialized form data\r\n       */\r\n\r\n      const serialize = function (form) {\r\n\r\n       // Setup our serialized data\r\n       var serialized = {};\r\n\r\n       // Loop through each field in the form\r\n       for (var i = 0; i < form.elements.length; i++) {\r\n\r\n         var field = form.elements[i];\r\n\r\n         // Don't serialize fields without a name, submits, buttons, file and reset inputs, and disabled fields\r\n         if (!field.name || field.disabled || field.type === 'file' || field.type === 'reset' || field.type === 'submit' || field.type === 'button') continue;\r\n\r\n         // If a multi-select, get all selections\r\n         if (field.type === 'select-multiple') {\r\n           for (var n = 0; n < field.options.length; n++) {\r\n             if (!field.options[n].selected) continue;\r\n             serialized[encodeURIComponent(field.name)] = encodeURIComponent(field.options[n].value);\r\n           }\r\n         }\r\n\r\n         // Convert field data to a query string\r\n         else if ((field.type !== 'checkbox' && field.type !== 'radio') || field.checked) {\r\n           serialized[encodeURIComponent(field.name)] = encodeURIComponent(field.value);\r\n         }\r\n       }\r\n       return serialized;\r\n     };\r\n\r\n   var form = document.forms.namedItem('emailAdd');\r\n   form.addEventListener('submit', function(e) {\r\n     e.preventDefault();\r\n\r\n     const formData = serialize(form);\r\n     fetch(\"https://gothic-welder-217319.appspot.com\", {\r\n       method: \"POST\",\r\n       headers: {\r\n         \"content-type\": \"text/plain\"\r\n       },\r\n       body: JSON.stringify(formData)\r\n     })\r\n     .then(function(resp) {\r\n       return resp.text();\r\n     })\r\n     .then(function(data) {\r\n       console.log(data);\r\n       results.textContent = data;\r\n     })\r\n     .catch(function(error) {\r\n       console.error(error);\r\n     })\r\n   });\r\n\r\n\r\n\r\n    //  // HERE IS THE READ FUNCTION\r\n    //  var db = document.getElementById(\"db\");\r\n\r\n    //  db.addEventListener(\"click\", function() {\r\n    //    var results = document.getElementById(\"results\");\r\n    //    fetch(\"https://gothic-welder-217319.appspot.com?addr\", {\r\n    //      method: \"GET\",\r\n    //      headers: {\r\n    //        \"content-type\": \"text/plain\"\r\n    //      }\r\n    //    })\r\n    //    .then(function(response) {\r\n    //      return response.text();\r\n    //    })\r\n    //    .then(function(data) {\r\n    //      console.log(data);\r\n    //      results.textContent = data;\r\n    //    })\r\n    //    .catch(function(error) {\r\n    //      console.log(error);\r\n    //    })\r\n    //  });\r\n\r\n    const cLog = () => {console.log(\"hello world\")}\r\n    cLog();\r\n }\r\n"]}